generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Test {
  id   String @id @default(cuid())
  name String
}

model User {
  // basic
  id                  String              @id @default(cuid())
  name                String
  surname             String
  password            String
  email               String              @unique
  emailVerified       Boolean             @default(false)
  accountType         AccountType
  // profile
  birthday            DateTime
  description         String              @db.VarChar(500)
  photos              String[]
  gender              String
  sexualOrientation   SexualOrientation[]
  showMeGender        ShowMeGender
  // matching
  showMeAgeLowerLimit Int
  showMeAgeUpperLimit Int
  latitude            Float
  longitude           Float
  //others
  createdAt           DateTime            @default(now())


  session              Session[]
  userIdRelation       Likes[]   @relation(name: "userIdRelation")
  judgedUserIdRelation Likes[]   @relation(name: "judgedUserIdRelation")
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  Country   String
  City      String
  UserAgent String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Likes {
  id                   String   @id @default(cuid())
  userId               String
  jugdedUserId         String
  createdAt            DateTime @default(now())
  userIdRelation       User     @relation("userIdRelation", fields: [userId], references: [id], onDelete: Cascade)
  judgedUserIdRelation User     @relation("judgedUserIdRelation", fields: [jugdedUserId], references: [id], onDelete: Cascade)
}

model Relations {
  id           String       @id @default(cuid())
  relationType RelationType
  createdAt    DateTime     @default(now())
}

enum RelationType {
  rejected
  accepted
}

enum ShowMeGender {
  Male
  Female
  All
}

enum SexualOrientation {
  Heterosexual
  Gay
  Lesbian
  Bisexual
  Pansexual
  Demisexual
  Asexual
  Queer
  Undefined
}

enum AccountType {
  default
  silver
  gold
  black
}
